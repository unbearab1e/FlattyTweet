<UserControl x:Class="FlattyTweet.View.SelectTwitterListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Extensions="clr-namespace:FlattyTweet.Extensions"
             xmlns:ViewModel="clr-namespace:FlattyTweet.ViewModel">
  <FrameworkElement.Resources>
    <Extensions:NegateBooleanToVisibilityConverter x:Key="negateBooleanToVisibilityConverter"/>
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
    <Style x:Key="ListsItem" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.FontWeight" Value="SemiBold"/>
      <Setter Property="TextBlock.FontSize" Value="15"/>
      <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>
    </Style>
    <Style x:Key="ListsDescription" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.FontSize" Value="13"/>
      <Setter Property="TextBlock.LineHeight" Value="17"/>
      <Setter Property="FrameworkElement.Margin" Value="0"/>
      <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="ListsMeta" TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource ModernTextDarkerBrush}"/>
      <Setter Property="FrameworkElement.Margin" Value="0,3,0,0"/>
      <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
    </Style>
    <DataTemplate DataType="{x:Type ViewModel:TwitterListExtended}">
      <StackPanel Background="Transparent" Cursor="Hand">
        <DockPanel Margin="0,0,0,3">
          <CheckBox DockPanel.Dock="Left" Margin="0,4,8,0" IsChecked="{Binding IsSelected}"/>
          <Path ToolTip="Private list" VerticalAlignment="Top" DockPanel.Dock="Left" Margin="0,3,6,0" Width="10"
                Height="14" Stretch="Fill" Fill="{DynamicResource ProtectedAccountIconSmall}"
                Data="{StaticResource PathPadlock}"
                Visibility="{Binding BaseListObject.IsPublic, Converter={StaticResource negateBooleanToVisibilityConverter}}"/>
          <TextBlock Style="{DynamicResource ListsItem}" HorizontalAlignment="Left"
                     Text="{Binding BaseListObject.FullName, Mode=OneTime}"/>
        </DockPanel>
        <StackPanel Margin="22,0,0,0">
          <FrameworkElement.Resources>
            <Extensions:AppendSpaceToNonEmptyString x:Key="appendSpaceToString"/>
            <Extensions:EmptyStringToVisibility x:Key="emptyStringToVisibility"/>
          </FrameworkElement.Resources>
          <TextBlock Style="{DynamicResource ListsDescription}"
                     Visibility="{Binding BaseListObject.Description, Mode=OneTime, Converter={StaticResource emptyStringToVisibility}}">
            <Run Text="{Binding BaseListObject.Description, Mode=OneTime, Converter={StaticResource appendSpaceToString}}"/>
          </TextBlock>
          <TextBlock Style="{DynamicResource ListsMeta}" Opacity="0.6">
            <Run Text="{Binding BaseListObject.NumberOfMembers}"/>
            <Run Text=" members, "/>
            <Run Text="{Binding BaseListObject.NumberOfSubscribers}"/>
            <Run Text=" subscribers"/>
          </TextBlock>
        </StackPanel>
      </StackPanel>
    </DataTemplate>
  </FrameworkElement.Resources>
  <Grid Margin="30,36">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <UserControl Grid.RowSpan="2" Style="{DynamicResource Throbber}" VerticalAlignment="Center" Margin="20"
                 Content="{Binding ProgressText, Mode=TwoWay}"
                 Visibility="{Binding ShowAnimation, Converter={StaticResource booleanToVisibilityConverter}}"/>
    <TextBlock Grid.Row="0" HorizontalAlignment="Left" TextWrapping="Wrap" Margin="0,0,0,25"
               Style="{DynamicResource MetroHeading1}" Foreground="{DynamicResource MetroHeadingColorDark}"
               Text="add to lists"/>
    <StackPanel Grid.Row="1"
                Visibility="{Binding ShowFailedLists, Converter={StaticResource booleanToVisibilityConverter}}">
      <TextBlock Text="{Binding UserToAdd.UserName, StringFormat='Failed to add and remove {0} from the following lists'}"/>
      <ListBox ItemsSource="{Binding FailedLists}">
        <Control.Template>
          <ControlTemplate TargetType="{x:Type ListBox}">
            <ItemsPresenter/>
          </ControlTemplate>
        </Control.Template>
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <TextBlock Text="{Binding Item1}"/>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ListBox>
      <Button Content="ok" Width="150" Style="{DynamicResource MetroButton}" Command="{Binding CancelCommand}"/>
    </StackPanel>
    <DockPanel Grid.Row="1">
      <DockPanel Dock="Top" Margin="0,0,0,20">
        <Canvas DockPanel.Dock="Left" VerticalAlignment="Top" Width="48" Height="48" Margin="0,0,10,0">
          <Panel.Background>
            <ImageBrush>
              <ImageBrush.ImageSource>
                <PriorityBinding TargetNullValue="{StaticResource DefaultImageSource}">
                  <Binding Path="UserImage" IsAsync="true" Converter="{StaticResource nullImageConverter}"/>
                  <Binding Path="UserDefaultImage" IsAsync="true" Converter="{StaticResource nullImageConverter}"/>
                </PriorityBinding>
              </ImageBrush.ImageSource>
            </ImageBrush>
          </Panel.Background>
        </Canvas>
        <StackPanel VerticalAlignment="Center" Margin="0,0,0,3">
          <TextBlock FontSize="15" FontWeight="SemiBold" Text="{Binding UserToAdd.ScreenName}"/>
          <TextBlock Text="{Binding UserToAdd.Name}"/>
        </StackPanel>
      </DockPanel>
      <ListBox x:Name="twitterLists" SelectionMode="Multiple" ItemsSource="{Binding TwitterLists}"
               Visibility="{Binding ShowLists, Converter={StaticResource booleanToVisibilityConverter}}">
        <FrameworkElement.Resources>
          <Style TargetType="{x:Type ListBox}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                  <ScrollViewer>
                    <ItemsPresenter/>
                  </ScrollViewer>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
          <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
            <Setter Property="FrameworkElement.Margin" Value="0,0,0,10"/>
            <Setter Property="ListBoxItem.IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                  <ContentPresenter/>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Resources>
      </ListBox>
    </DockPanel>
    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,20,0,0">
      <Button Content="save" Width="150" Margin="0,0,10,0" Style="{DynamicResource MetroButton}"
              Command="{Binding SaveCommand}"
              Visibility="{Binding ShowLists, Converter={StaticResource booleanToVisibilityConverter}}"/>
      <Button Content="cancel" Width="150" Style="{DynamicResource MetroButton}"
              Command="{Binding CancelCommand}"/>
    </StackPanel>
  </Grid>
</UserControl>