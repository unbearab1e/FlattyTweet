<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="http://schemas.metrotwit.com/">

    <Style TargetType="{x:Type local:PopupService}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="{DynamicResource ModernTextLighterBrush}" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PopupService}">
                        <Border Name="PART_PopupContainer" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{DynamicResource ModernBgDarkerBrush}" BorderThickness="1" BorderBrush="{DynamicResource ModernFeatureBrush}">
                            <DockPanel x:Name="Content" UseLayoutRounding="True">
                                <Grid DockPanel.Dock="Top" MinHeight="32" MaxHeight="74">
                                    <TextBlock Name="PART_Title" Style="{DynamicResource MetroHeading1}" VerticalAlignment="Bottom" Foreground="{DynamicResource ModernTextLightestBrush}" Margin="15,38,15,4" />
                                    <Button Name="PART_BackButton" Margin="0,0,0,0" Style="{DynamicResource MetroPathButton}" HorizontalAlignment="Left" VerticalAlignment="Top" ClipToBounds="True" Height="36" Width="36" ToolTip="Back" Visibility="Collapsed">
                                        <Canvas Margin="-7,-7,0,0">
                                            <Ellipse Width="36" Height="36" Margin="0" Stretch="Fill" StrokeLineJoin="Round" Stroke="{DynamicResource ModernTextLightestBrush}" StrokeThickness="1"/>
                                            <Path Width="18" Height="18" Margin="9" Stretch="Fill" Fill="{DynamicResource ModernTextLightestBrush}" Data="{StaticResource PathBack}"/>
                                        </Canvas>
                                    </Button>
                                    <Button Name="PART_PinButton" Margin="0,0,0,-32" Style="{DynamicResource MetroPathButton}" HorizontalAlignment="Right" VerticalAlignment="Top" ClipToBounds="True" Height="38" Width="42" ToolTip="Pin as column">
                                        <Canvas Margin="4,-8,0,0">
                                            <Ellipse Width="42" Height="42" Margin="0" Stretch="Fill" StrokeLineJoin="Round" Stroke="{DynamicResource ModernTextLightestBrush}" StrokeThickness="1"/>
                                            <Path Width="20" Height="20" Margin="11"  Stretch="Fill" Fill="{DynamicResource ModernTextLightestBrush}" Data="{StaticResource PathPin}"/>
                                        </Canvas>
                                    </Button>
                                </Grid>
                                <ScrollViewer Name="PART_ScrollViewer" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden">
                                    <StackPanel Orientation="Horizontal" Name="PART_ContentContainer" Margin="5,0,5,6" />
                                </ScrollViewer>
                                <DockPanel.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </DockPanel.RenderTransform>
                                </DockPanel>
                        </Border>
                    <!--<ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroInlinePopup" TargetType="{x:Type local:InlinePopup}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource ModernTextLighterBrush}" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InlinePopup}">
                    <AdornerDecorator>
                        <DockPanel Name="PART_MainContainer" Focusable="False">
                            <Border Background="{DynamicResource ModernBgDarkerBrush}" BorderThickness="1" BorderBrush="{DynamicResource ModernFeatureBrush}">
                                <ContentPresenter x:Name="Content" Content="{TemplateBinding Content}" Margin="15">
                                    <ContentPresenter.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                            </Border>
                        </DockPanel>
                    </AdornerDecorator>
                    <!--<ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="-30"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                            <EasingDoubleKeyFrame.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="6"/>
                                            </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                                        </EasingDoubleKeyFrame>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>