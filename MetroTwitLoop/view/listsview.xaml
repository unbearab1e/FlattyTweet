<UserControl x:Class="MetroTwit.View.ListsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Extensions="clr-namespace:MetroTwit.Extensions"
             xmlns:ViewModel="clr-namespace:MetroTwit.ViewModel"
             xmlns:Twitterizer="clr-namespace:Twitterizer;assembly=Twitterizer2"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             Style="{DynamicResource MetroUserControl}">
  <FrameworkElement.Resources>
    <Extensions:NegateBooleanToVisibilityConverter x:Key="negateBooleanToVisibilityConverter"/>
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
    <Style TargetType="{x:Type ListBox}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListBox}">
            <ItemsPresenter/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="{x:Type ListBoxItem}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
      <Setter Property="FrameworkElement.Margin" Value="0,0,0,10"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListBoxItem}">
            <ContentPresenter/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ListsItem" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.FontWeight" Value="SemiBold"/>
      <Setter Property="TextBlock.FontSize" Value="16"/>
      <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
      <Setter Property="TextBlock.TextTrimming" Value="CharacterEllipsis"/>
      <Style.Triggers>
        <Trigger Property="UIElement.IsMouseOver" Value="true">
          <Setter Property="TextBlock.TextDecorations" Value="Underline"/>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="ListsDescription" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.FontSize" Value="13"/>
      <Setter Property="TextBlock.LineHeight" Value="17"/>
      <Setter Property="FrameworkElement.Margin" Value="0"/>
      <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="ListsMeta" TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource ModernTextLighterBrush}"/>
      <Setter Property="FrameworkElement.Margin" Value="0,3,0,0"/>
      <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
    </Style>
    <DataTemplate DataType="{x:Type ViewModel:TwitterListExtended}">
      <StackPanel>
        <DockPanel Margin="0,0,0,3">
          <Path Width="12" DockPanel.Dock="Left" Height="11" Margin="0,5,10,0" VerticalAlignment="Top"
                Stretch="Fill" Fill="{DynamicResource ModernTextLighterBrush}" Data="{StaticResource PathList}"/>
          <Path ToolTip="Private list" VerticalAlignment="Top" DockPanel.Dock="Left" Margin="0,4,6,0" Width="10"
                Height="14" Stretch="Fill" Fill="{DynamicResource ProtectedAccountIconSmall}"
                Data="{StaticResource PathPadlock}"
                Visibility="{Binding BaseListObject.IsPublic, Converter={StaticResource negateBooleanToVisibilityConverter}}"/>
          <TextBlock TextWrapping="Wrap" Style="{DynamicResource ListsItem}" HorizontalAlignment="Left"
                     Text="{Binding BaseListObject.FullName, Mode=OneTime}"
                     ToolTip="{Binding BaseListObject.FullName, Mode=OneTime}"/>
        </DockPanel>
        <StackPanel Margin="22,0,0,0">
          <FrameworkElement.Resources>
            <Extensions:AppendSpaceToNonEmptyString x:Key="appendSpaceToString"/>
            <Extensions:EmptyStringToVisibility x:Key="emptyStringToVisibility"/>
          </FrameworkElement.Resources>
          <TextBlock Style="{DynamicResource ListsDescription}"
                     Visibility="{Binding BaseListObject.Description, Mode=OneTime, Converter={StaticResource emptyStringToVisibility}}">
            <Run Text="{Binding BaseListObject.Description, Mode=OneTime, Converter={StaticResource appendSpaceToString}}"/>
          </TextBlock>
          <TextBlock Style="{DynamicResource ListsMeta}" Opacity="0.6">
            <Run Text="{Binding BaseListObject.NumberOfMembers}"/>
            <Run Text=" members, "/>
            <Run Text="{Binding BaseListObject.NumberOfSubscribers}"/>
            <Run Text=" subscribers"/>
          </TextBlock>
          <WrapPanel Margin="0,5,0,0"
                     Visibility="{Binding IsEditable, Converter={StaticResource booleanToVisibilityConverter}}">
            <Button Style="{DynamicResource MetroPathButton}" Margin="0,0,10,4" Cursor="Hand"
                    Command="{Binding EditListCommand}">
              <TextBlock>
                <Path Stretch="Uniform" Width="12" Height="12" Fill="{DynamicResource ModernFeatureBrush}"
                      Margin="0,0,3,-2" Data="{StaticResource PathEdit}"/>
                <Run Text="Edit list"/>
              </TextBlock>
            </Button>
            <Button Style="{DynamicResource MetroPathButton}" Margin="0,0,10,4" Cursor="Hand"
                    Command="{Binding RemoveListCommand}">
              <TextBlock>
                <Path Stretch="Uniform" Width="11" Height="12" Fill="{DynamicResource ModernFeatureBrush}"
                      Margin="0,0,4,-2" Data="{StaticResource PathClose}"/>
                <Run Text="Delete list"/>
              </TextBlock>
            </Button>
          </WrapPanel>
          <Button Style="{DynamicResource MetroPathButton}" Margin="0,5,0,0" Cursor="Hand"
                  Command="{Binding UnsubscribeCommand}"
                  Visibility="{Binding IsUnsubscribeVisible, Converter={StaticResource booleanToVisibilityConverter}}">
            <TextBlock>
              <Path Stretch="Uniform" Width="11" Height="12" Fill="{DynamicResource ModernFeatureBrush}"
                    Margin="0,0,4,-2" Data="{StaticResource PathClose}"/>
              <Run Text="Unsubscribe list"/>
            </TextBlock>
          </Button>
        </StackPanel>
      </StackPanel>
    </DataTemplate>
  </FrameworkElement.Resources>
  <DockPanel>
    <UserControl Style="{DynamicResource Throbber}" DockPanel.Dock="Top" Content="Loading lists..." Margin="20"
                 Visibility="{Binding ShowAnimation, Converter={StaticResource booleanToVisibilityConverter}}"/>
    <TabControl SelectionChanged="TabControl_SelectionChanged" x:Name="lists" Margin="10"
                Visibility="{Binding ShowLists, Converter={StaticResource booleanToVisibilityConverter}}"
                ItemsSource="{Binding TwitterLists}">
      <TabControl.ContentTemplate>
        <DataTemplate>
          <StackPanel Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DockPanel}}, Path=DockPanel}">
            <ListBox Margin="0,0,10,0" ItemsSource="{Binding Lists}">
              <Control.Template>
                <ControlTemplate TargetType="{x:Type ListBox}">
                  <ItemsPresenter/>
                </ControlTemplate>
              </Control.Template>
            </ListBox>
            <Button HorizontalAlignment="Left" Style="{DynamicResource MetroButton}" Content="new list" Width="140"
                    Margin="0,10,0,10"
                    Visibility="{Binding ShowAddButton, Converter={StaticResource booleanToVisibilityConverter}}"
                    Command="{Binding AddListCommand}"/>
          </StackPanel>
        </DataTemplate>
      </TabControl.ContentTemplate>
      <ItemsControl.ItemContainerStyle>
        <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
          <Setter Property="HeaderedContentControl.Header" Value="{Binding Path=Name}"/>
        </Style>
      </ItemsControl.ItemContainerStyle>
    </TabControl>
  </DockPanel>
</UserControl>